{"version":3,"file":"static/webpack/static/development/pages/alunos/[id].js.ecd0556e22229fbda5cc.hot-update.js","sources":["webpack:///./components/ConfirmAction.js","webpack:///./components/DropOptions.js","webpack:///./components/PerfilAluno/index.js"],"sourcesContent":["import ModalContainer from './ModalContainer';\n\nexport default function ConfirmAction({ active, close }) {\n    return (\n        <ModalContainer isCard title='Deletar Usuário' active={active} close={close}>\n            <p>Tem certeza de que deseja deletar este usuário?</p>\n        </ModalContainer>\n    )\n}","import { useState } from 'react';\nimport { Dropdown, DropdownTrigger, DropdownMenu, \n    DropdownContent, DropdownItem, Icon, Button, DropdownDivider \n} from 'bloomer';\nimport ConfirmAction from './ConfirmAction';\n\nexport default function DropOptions({ buttonName }) {\n    const [modal, setModal] = useState(false);\n\n    return (\n        <Dropdown isHoverable>\n            <DropdownTrigger>\n                <Button isColor='primary'>\n                    <Icon isSize='small' className='fa fa-user-edit' />\n                    <span>{buttonName}</span>\n                </Button>\n            </DropdownTrigger>\n            <DropdownMenu>\n                <DropdownContent>\n                    <DropdownItem href=\"#\">\n                        <Icon isSize='small' className='fa fa-edit' />\n                        Editar Informações\n                    </DropdownItem>\n                    <DropdownDivider />\n                    <DropdownItem href=\"#\" onClick={() => setModal(true)}>\n                        <Icon isSize='small' className='fa fa-trash' />\n                        Excluir Usuário\n                    </DropdownItem>\n                    <DropdownDivider />\n                    <DropdownItem href=\"#\">\n                        <Icon isSize='small' className='fa fa-share-alt' />\n                        Compartilhar Perfil\n                    </DropdownItem>\n                </DropdownContent>\n            </DropdownMenu>\n            <ConfirmAction active={modal} close={() => setModal(false)} />\n        </Dropdown>\n    )\n}\n\n","import { Columns, Column, Icon, Button } from 'bloomer';\nimport Link from 'next/link';\nimport Perfil from './Perfil';\nimport DropOptions from '../DropOptions'\n\nexport default function PerfilAluno(props) {\n    return (\n        <Column>\n            <Columns>\n                <Column>\n                    <Link href='/alunos'>\n                    <a>\n                        <Icon isSize='large' className='fa fa-arrow-left' />\n                        Voltar\n                    </a>\n                    </Link>\n                </Column>\n                <Column hasTextAlign='right'>\n                    <DropOptions buttonName='Editar Aluno' />\n                </Column>\n            </Columns>\n            <Perfil />\n        </Column>\n    )\n}"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AAGA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}