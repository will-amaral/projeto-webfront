{"ast":null,"code":"var _jsxFileName = \"/home/will/Documents/School/Projeto-IFSP/projeto-webfront/components/Home/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { Container, Columns, Column } from 'bloomer';\nimport { gql } from 'apollo-boost';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport MainArea from './MainArea';\nimport { api } from '../../utils/auth';\nexport default function Home({\n  user\n}) {\n  const {\n    0: profile,\n    1: setProfile\n  } = useState({\n    name: 'Paul'\n  });\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), __jsx(Container, {\n    style: {\n      marginTop: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(Columns, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(Column, {\n    isSize: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(Sidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), __jsx(MainArea, {\n    profile: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }))));\n}\n\nHome.getInitialProps = async function () {\n  const result = await api.query({\n    query: gql`\n                                {\n                                    users {\n                                        id\n                                        name\n                                        email\n                                    }\n                                }\n                            `\n  });\n  return {\n    user: result.data.users[0].name\n  };\n};","map":{"version":3,"sources":["/home/will/Documents/School/Projeto-IFSP/projeto-webfront/components/Home/index.js"],"names":["useState","useEffect","Container","Columns","Column","gql","Header","Sidebar","MainArea","api","Home","user","profile","setProfile","name","marginTop","getInitialProps","result","query","data","users"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,MAA7B,QAA2C,SAA3C;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,GAAT,QAAoB,kBAApB;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AACnC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAC;AACnCc,IAAAA,IAAI,EAAE;AAD6B,GAAD,CAAtC;AAIA,SACI,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII,MAAC,QAAD;AAAU,IAAA,OAAO,EAAGJ,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CAFJ,CADJ;AAaH;;AAEDD,IAAI,CAACM,eAAL,GAAuB,kBAAiB;AACpC,QAAMC,MAAM,GAAG,MAAMR,GAAG,CAACS,KAAJ,CAAU;AACPA,IAAAA,KAAK,EAAEb,GAAI;;;;;;;;;AADJ,GAAV,CAArB;AAUA,SAAO;AAAEM,IAAAA,IAAI,EAAEM,MAAM,CAACE,IAAP,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBN;AAA7B,GAAP;AACH,CAZD","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Container, Columns, Column } from 'bloomer';\nimport { gql } from 'apollo-boost';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport MainArea from './MainArea';\nimport { api } from '../../utils/auth';\n\nexport default function Home({ user }) {\n    const [profile, setProfile] = useState({\n        name: 'Paul'\n    });\n\n    return (\n        <>\n            <Header />\n            <Container style={{ marginTop: 15 }}>\n                <Columns>\n                    <Column isSize={3}>\n                        <Sidebar />\n                    </Column>\n                    <MainArea profile={ user } />\n                </Columns>\n            </Container>\n        </>\n    )\n}\n\nHome.getInitialProps = async function() {\n    const result = await api.query({\n                            query: gql`\n                                {\n                                    users {\n                                        id\n                                        name\n                                        email\n                                    }\n                                }\n                            `});\n    return { user: result.data.users[0].name };\n}"]},"metadata":{},"sourceType":"module"}