{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { Hero, HeroBody, Container, Title, Subtitle, Columns, Column, Image } from 'bloomer';\nimport Router from 'next/router';\nimport CustomNotification from '../CustomNotification';\nimport Form from './Form';\nimport api from '../../utils/api';\nimport { login } from '../../utils/auth';\nimport styles from '../styles';\nexport default function Login() {\n  var _useState = useState(''),\n      message = _useState[0],\n      setMessage = _useState[1];\n\n  var _useState2 = useState(''),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  function handleSubmit(_x, _x2, _x3) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event, email, password) {\n      var _ref, token, alert;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!(!email || !password)) {\n                _context.next = 6;\n                break;\n              }\n\n              setMessage('Preencha todos os campos para continuar!');\n              setColor('danger');\n              _context.next = 23;\n              break;\n\n            case 6:\n              setLoading(true);\n              _context.prev = 7;\n              _context.next = 10;\n              return api.post('/login', {\n                email: email,\n                password: password\n              });\n\n            case 10:\n              _ref = _context.sent;\n              token = _ref.data.token;\n              login(token);\n              Router.push('/');\n              _context.next = 23;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](7);\n              console.log(_context.t0.response.data.message);\n\n              if (!_context.t0.response) {\n                alert = 'Erro de servidor';\n              } else if (!_context.t0.response.data.message) {\n                alert = 'Senha incorreta';\n              } else {\n                alert = _context.t0.response.data.message;\n              }\n\n              setMessage(alert);\n              setColor('danger');\n              setLoading(false);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[7, 16]]);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  ;\n  return __jsx(Columns, {\n    isVCentered: true,\n    isGapless: true\n  }, __jsx(Column, {\n    isSize: {\n      mobile: \"full\",\n      desktop: \"1/4\"\n    }\n  }, __jsx(Hero, {\n    isColor: \"primary\",\n    isFullHeight: true,\n    style: styles.gradient\n  }, __jsx(HeroBody, null, __jsx(Container, {\n    hasTextAlign: \"centered\",\n    style: {\n      margin: 20\n    }\n  }, __jsx(Image, {\n    style: styles.logo,\n    src: \"/static/img/logo-white.png\"\n  }), __jsx(Title, null, \"Gym App\"), __jsx(Subtitle, null, \"Fa\\xE7a o login para prosseguir\"), __jsx(CustomNotification, {\n    message: message,\n    color: color,\n    close: function close() {\n      return setMessage('');\n    }\n  }), __jsx(Form, {\n    loading: loading,\n    handleSubmit: handleSubmit\n  }))))), __jsx(Column, {\n    isHidden: \"touch\"\n  }, __jsx(Hero, {\n    isFullHeight: true,\n    style: styles.background\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}