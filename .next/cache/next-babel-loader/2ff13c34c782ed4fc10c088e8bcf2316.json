{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Axios from 'axios';\nimport cookie from 'js-cookie';\nvar api = Axios.create({\n  baseURL: 'http://localhost:4000'\n});\napi.interceptors.request.use(\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(config) {\n    var token;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return cookie.get('token');\n\n          case 2:\n            token = _context.sent;\n\n            if (token) {\n              config.headers.Authorization = \"Bearer \".concat(token);\n            }\n\n            return _context.abrupt(\"return\", config);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport default api;","map":{"version":3,"sources":["/home/will/Documents/School/Projeto-IFSP/projeto-webfront/utils/api.js"],"names":["Axios","cookie","api","create","baseURL","interceptors","request","use","config","get","token","headers","Authorization"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,IAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAE;AADY,CAAb,CAAZ;AAIAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA6B,iBAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLP,MAAM,CAACQ,GAAP,CAAW,OAAX,CADK;;AAAA;AACnBC,YAAAA,KADmB;;AAEzB,gBAAIA,KAAJ,EAAW;AACPF,cAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,oBAAyCF,KAAzC;AACH;;AAJwB,6CAKlBF,MALkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;AAQA,eAAeN,GAAf","sourcesContent":["import Axios from 'axios';\nimport cookie from 'js-cookie';\n\nconst api = Axios.create({\n    baseURL: 'http://localhost:4000'\n});\n\napi.interceptors.request.use(async function (config) {\n    const token = await cookie.get('token');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}