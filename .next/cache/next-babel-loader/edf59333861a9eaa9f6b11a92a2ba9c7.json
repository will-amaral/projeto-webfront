{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport Axios from 'axios';\nvar api = Axios.create({\n  baseURL: 'http://localhost:4000'\n});\nexport function setHeader(token) {\n  api.interceptors.request.use(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(config) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (token) {\n                config.headers.Authorization = \"Bearer \".concat(token);\n              }\n\n              return _context.abrupt(\"return\", config);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}\nexport default api;","map":{"version":3,"sources":["/home/will/Documents/School/projeto-ifsp/webfront/utils/api.js"],"names":["Axios","api","create","baseURL","setHeader","token","interceptors","request","use","config","headers","Authorization"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAE;AADY,CAAb,CAAZ;AAIA,OAAO,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAC7BJ,EAAAA,GAAG,CAACK,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,6BAA6B,iBAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AACzB,kBAAIJ,KAAJ,EAAW;AACPI,gBAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,oBAAyCN,KAAzC;AACH;;AAHwB,+CAIlBI,MAJkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA7B;;AAAA;AAAA;AAAA;AAAA;AAMH;AAED,eAAeR,GAAf","sourcesContent":["import Axios from 'axios';\n\nconst api = Axios.create({\n    baseURL: 'http://localhost:4000'\n});\n\nexport function setHeader(token) {\n    api.interceptors.request.use(async function (config) {\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    });\n}\n\nexport default api;"]},"metadata":{},"sourceType":"module"}