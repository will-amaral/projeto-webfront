{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/will/Documents/School/projeto-ifsp/webfront/utils/auth.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Router from 'next/router';\nimport cookie from 'js-cookie';\nimport nextCookie from 'next-cookies';\nexport function login(token) {\n  cookie.set('token', token, {\n    expires: 1\n  });\n  Router.push('/');\n}\nexport function logout() {\n  cookie.remove('token');\n  Router.push('/login');\n}\nexport function auth(ctx) {\n  const {\n    token\n  } = nextCookie(ctx);\n\n  if (ctx.req && !token) {\n    console.log('N達o existem cookies');\n    ctx.res.writeHead(302, {\n      Location: '/login'\n    });\n    ctx.res.end();\n  }\n\n  if (!token) {\n    console.log('N達o existe token');\n    Router.push('/login');\n  }\n\n  console.log('Cookie: ' + token);\n  return token;\n}\nexport function withAuth(WrappedComponent) {\n  function Wrapper(props) {\n    return __jsx(WrappedComponent, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n  Wrapper.getInitialProps = async function (ctx) {\n    const token = auth(ctx);\n    const componentProps = WrappedComponent.getInitialProps && (await WrappedComponent.getInitialProps(ctx));\n    return _objectSpread({}, componentProps, {\n      token\n    });\n  };\n\n  return Wrapper;\n}","map":{"version":3,"sources":["/home/will/Documents/School/projeto-ifsp/webfront/utils/auth.js"],"names":["Router","cookie","nextCookie","login","token","set","expires","push","logout","remove","auth","ctx","req","console","log","res","writeHead","Location","end","withAuth","WrappedComponent","Wrapper","props","getInitialProps","componentProps"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACzBH,EAAAA,MAAM,CAACI,GAAP,CAAW,OAAX,EAAoBD,KAApB,EAA2B;AAAEE,IAAAA,OAAO,EAAE;AAAX,GAA3B;AACAN,EAAAA,MAAM,CAACO,IAAP,CAAY,GAAZ;AACH;AAED,OAAO,SAASC,MAAT,GAAkB;AACrBP,EAAAA,MAAM,CAACQ,MAAP,CAAc,OAAd;AACAT,EAAAA,MAAM,CAACO,IAAP,CAAY,QAAZ;AACH;AAED,OAAO,SAASG,IAAT,CAAcC,GAAd,EAAmB;AACtB,QAAM;AAAEP,IAAAA;AAAF,MAAYF,UAAU,CAACS,GAAD,CAA5B;;AAEA,MAAIA,GAAG,CAACC,GAAJ,IAAW,CAACR,KAAhB,EAAuB;AACnBS,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAH,IAAAA,GAAG,CAACI,GAAJ,CAAQC,SAAR,CAAkB,GAAlB,EAAuB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAvB;AACAN,IAAAA,GAAG,CAACI,GAAJ,CAAQG,GAAR;AACH;;AAED,MAAI,CAACd,KAAL,EAAY;AACRS,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAd,IAAAA,MAAM,CAACO,IAAP,CAAY,QAAZ;AACH;;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaV,KAAzB;AACA,SAAOA,KAAP;AACH;AAED,OAAO,SAASe,QAAT,CAAkBC,gBAAlB,EAAoC;AACvC,WAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,WAAO,MAAC,gBAAD,eAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH;;AAEDD,EAAAA,OAAO,CAACE,eAAR,GAA0B,gBAAeZ,GAAf,EAAoB;AAC1C,UAAMP,KAAK,GAAGM,IAAI,CAACC,GAAD,CAAlB;AACA,UAAMa,cAAc,GAAGJ,gBAAgB,CAACG,eAAjB,KACtB,MAAMH,gBAAgB,CAACG,eAAjB,CAAiCZ,GAAjC,CADgB,CAAvB;AAGA,6BAAYa,cAAZ;AAA4BpB,MAAAA;AAA5B;AACH,GAND;;AAQA,SAAOiB,OAAP;AACH","sourcesContent":["import Router from 'next/router';\nimport cookie from 'js-cookie';\nimport nextCookie from 'next-cookies';\n\nexport function login(token) {\n    cookie.set('token', token, { expires: 1 });\n    Router.push('/')\n}\n\nexport function logout() {\n    cookie.remove('token');\n    Router.push('/login');\n}\n\nexport function auth(ctx) {\n    const { token } = nextCookie(ctx);\n\n    if (ctx.req && !token) {\n        console.log('N達o existem cookies')\n        ctx.res.writeHead(302, { Location: '/login' });\n        ctx.res.end()\n    }\n\n    if (!token) {\n        console.log('N達o existe token')\n        Router.push('/login');\n    }\n    console.log('Cookie: ' + token)\n    return token\n}\n\nexport function withAuth(WrappedComponent) {\n    function Wrapper(props) {\n        return <WrappedComponent {...props } />\n    }\n\n    Wrapper.getInitialProps = async function(ctx) {\n        const token = auth(ctx);\n        const componentProps = WrappedComponent.getInitialProps && \n        (await WrappedComponent.getInitialProps(ctx))\n\n        return { ...componentProps, token }\n    }\n\n    return Wrapper;\n}"]},"metadata":{},"sourceType":"module"}