{"ast":null,"code":"var _jsxFileName = \"/home/will/Documents/School/Projeto-IFSP/projeto-webfront/components/Login/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { Hero, HeroBody, Container, Title, Subtitle, Columns, Column } from 'bloomer';\nimport Router from 'next/router';\nimport CustomNotification from '../CustomNotification';\nimport Form from './Form';\nimport api from '../../utils/api';\nimport { login } from '../../utils/auth';\nconst backgroundStyles = {\n  background: `linear-gradient(\n        rgba(0, 158, 108, 0.5),\n        rgba(0, 0, 0, 0.5)\n      ), url(/static/img/bg.jpg) no-repeat center center fixed`,\n  backgroundSize: 'cover'\n};\nexport default function Login() {\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n  const {\n    0: color,\n    1: setColor\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  async function handleSubmit(event, email, password) {\n    event.preventDefault();\n\n    if (!email || !password) {\n      setMessage('Preencha todos os campos para continuar!');\n      setColor('danger');\n    } else {\n      setLoading(true);\n\n      try {\n        const {\n          data: {\n            token\n          }\n        } = await api.post('/login', {\n          email,\n          password\n        });\n        login(token);\n        Router.push('/');\n      } catch (err) {\n        console.log(err.response);\n        setMessage(err.response.data.message);\n        setColor('danger');\n      }\n\n      setLoading(false);\n    }\n  }\n\n  ;\n  return __jsx(Columns, {\n    isVCentered: true,\n    isGapless: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(Column, {\n    isSize: {\n      mobile: \"full\",\n      desktop: \"1/4\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Hero, {\n    isColor: \"primary\",\n    isFullHeight: true,\n    isBold: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(HeroBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Container, {\n    hasTextAlign: \"centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Gym App\"), __jsx(Subtitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Fa\\xE7a o login para prosseguir\"), __jsx(CustomNotification, {\n    message: message,\n    color: color,\n    close: () => setMessage(''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(Form, {\n    loading: loading,\n    handleSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))))), __jsx(Column, {\n    isHidden: \"touch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(Hero, {\n    isFullHeight: true,\n    style: backgroundStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/will/Documents/School/Projeto-IFSP/projeto-webfront/components/Login/index.js"],"names":["useState","Hero","HeroBody","Container","Title","Subtitle","Columns","Column","Router","CustomNotification","Form","api","login","backgroundStyles","background","backgroundSize","Login","message","setMessage","color","setColor","loading","setLoading","handleSubmit","event","email","password","preventDefault","data","token","post","push","err","console","log","response","mobile","desktop"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Hero, HeroBody, Container, Title,\n    Subtitle, Columns, Column \n} from 'bloomer';\nimport Router from 'next/router';\nimport CustomNotification from '../CustomNotification';\nimport Form from './Form';\nimport api from '../../utils/api';\nimport { login } from '../../utils/auth';\n\nconst backgroundStyles = {\n    background: `linear-gradient(\n        rgba(0, 158, 108, 0.5),\n        rgba(0, 0, 0, 0.5)\n      ), url(/static/img/bg.jpg) no-repeat center center fixed`,\n    backgroundSize: 'cover' \n}\n\nexport default function Login() {\n    const [message, setMessage] = useState('');\n    const [color, setColor] = useState('');\n    const [loading, setLoading] = useState(false);\n\n\n    async function handleSubmit(event, email, password){\n        event.preventDefault();\n        if (!email || !password) {\n            setMessage('Preencha todos os campos para continuar!');\n            setColor('danger');\n        } else {\n            setLoading(true);\n            try {\n                const { data: { token } } = await api.post('/login', { email, password });\n                login(token);\n                Router.push('/');\n            } catch (err) {\n                console.log(err.response)\n                setMessage(err.response.data.message)\n                setColor('danger');\n            }\n            setLoading(false);\n        }\n    };\n\n    return(\n        <Columns isVCentered isGapless>\n            <Column isSize={{mobile: \"full\", desktop: \"1/4\" }}>\n                <Hero isColor=\"primary\" isFullHeight isBold>\n                    <HeroBody>\n                        <Container hasTextAlign=\"centered\">\n                            <Title>Gym App</Title>\n                            <Subtitle>Fa√ßa o login para prosseguir</Subtitle>\n                            <CustomNotification\n                                message={message}\n                                color={color}\n                                close={()=> setMessage('')}\n                            />\n                            <Form loading={loading} handleSubmit={handleSubmit} />\n                        </Container>\n                    </HeroBody>\n                </Hero>\n            </Column> \n            <Column isHidden=\"touch\">\n                <Hero isFullHeight style={backgroundStyles} />\n            </Column>               \n        </Columns>\n    );\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}